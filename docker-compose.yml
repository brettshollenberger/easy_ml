x-app: &default-app
  build:
    context: .
    target: "app"
    args:
      RAILS_ENV: ${RAILS_ENV:-production}
      POSTGRES_URL: ${POSTGRES_URL}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      REDIS_URL: ${REDIS_URL}
      ROLLBAR_ACCESS_KEY: ${ROLLBAR_ACCESS_KEY}
  env_file:
    - .env
  stop_grace_period: 3s
  tty: true
  volumes:
    - .:/app
  environment:
    RAILS_ENV: ${RAILS_ENV}
    SECRET_KEY_BASE: "${SECRET_KEY_BASE}" # Pass from host environment or .env file
    POSTGRES_URL: "${POSTGRES_URL}" # Pass from .env
    REDIS_URL: "${REDIS_URL}"
    ROLLBAR_ACCESS_KEY: "${ROLLBAR_ACCESS_KEY}"

services:
  web:
    <<: *default-app
    image: web:latest
    healthcheck:
      test: "curl -f http://localhost:3000/easy_ml/healthcheck || exit 1"
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3
    ports:
      - "3000:3000" # Map host's port 3000 to container's port 3000

  worker:
    image: worker:latest
    <<: *default-app
    command: "bundle exec rake resque:work QUEUE=easy_ml"
    entrypoint: []
    deploy:
      replicas: 5

  zhong:
    image: zhong:latest
    <<: *default-app
    command: "bundle exec rake zhong:start"
    entrypoint: []
